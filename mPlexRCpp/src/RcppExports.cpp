// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// DaisyOffspring_C
List DaisyOffspring_C(StringVector fGen, StringVector mGen, List& reference);
RcppExport SEXP _mPlexRCpp_DaisyOffspring_C(SEXP fGenSEXP, SEXP mGenSEXP, SEXP referenceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< StringVector >::type fGen(fGenSEXP);
    Rcpp::traits::input_parameter< StringVector >::type mGen(mGenSEXP);
    Rcpp::traits::input_parameter< List& >::type reference(referenceSEXP);
    rcpp_result_gen = Rcpp::wrap(DaisyOffspring_C(fGen, mGen, reference));
    return rcpp_result_gen;
END_RCPP
}
// MultiplexOffspring_mLoci_C
List MultiplexOffspring_mLoci_C(StringVector fGen, StringVector mGen, List& reference);
RcppExport SEXP _mPlexRCpp_MultiplexOffspring_mLoci_C(SEXP fGenSEXP, SEXP mGenSEXP, SEXP referenceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< StringVector >::type fGen(fGenSEXP);
    Rcpp::traits::input_parameter< StringVector >::type mGen(mGenSEXP);
    Rcpp::traits::input_parameter< List& >::type reference(referenceSEXP);
    rcpp_result_gen = Rcpp::wrap(MultiplexOffspring_mLoci_C(fGen, mGen, reference));
    return rcpp_result_gen;
END_RCPP
}
// MultiplexOffspring_oLocus_C
List MultiplexOffspring_oLocus_C(StringVector fGen, StringVector mGen, List& reference);
RcppExport SEXP _mPlexRCpp_MultiplexOffspring_oLocus_C(SEXP fGenSEXP, SEXP mGenSEXP, SEXP referenceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< StringVector >::type fGen(fGenSEXP);
    Rcpp::traits::input_parameter< StringVector >::type mGen(mGenSEXP);
    Rcpp::traits::input_parameter< List& >::type reference(referenceSEXP);
    rcpp_result_gen = Rcpp::wrap(MultiplexOffspring_oLocus_C(fGen, mGen, reference));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mPlexRCpp_DaisyOffspring_C", (DL_FUNC) &_mPlexRCpp_DaisyOffspring_C, 3},
    {"_mPlexRCpp_MultiplexOffspring_mLoci_C", (DL_FUNC) &_mPlexRCpp_MultiplexOffspring_mLoci_C, 3},
    {"_mPlexRCpp_MultiplexOffspring_oLocus_C", (DL_FUNC) &_mPlexRCpp_MultiplexOffspring_oLocus_C, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_mPlexRCpp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
