// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// run_mPlex_Cpp
void run_mPlex_Cpp(const uint_least32_t& seed, const Rcpp::List& networkParameters_, const Rcpp::List& reproductionReference_, const Rcpp::NumericMatrix& migrationMale_, const Rcpp::NumericMatrix& migrationFemale_, const Rcpp::List& migrationBatch_, const std::string& reproductionType_, const bool& verbose);
RcppExport SEXP _mPlexCpp_run_mPlex_Cpp(SEXP seedSEXP, SEXP networkParameters_SEXP, SEXP reproductionReference_SEXP, SEXP migrationMale_SEXP, SEXP migrationFemale_SEXP, SEXP migrationBatch_SEXP, SEXP reproductionType_SEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const uint_least32_t& >::type seed(seedSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type networkParameters_(networkParameters_SEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type reproductionReference_(reproductionReference_SEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type migrationMale_(migrationMale_SEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type migrationFemale_(migrationFemale_SEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type migrationBatch_(migrationBatch_SEXP);
    Rcpp::traits::input_parameter< const std::string& >::type reproductionType_(reproductionType_SEXP);
    Rcpp::traits::input_parameter< const bool& >::type verbose(verboseSEXP);
    run_mPlex_Cpp(seed, networkParameters_, reproductionReference_, migrationMale_, migrationFemale_, migrationBatch_, reproductionType_, verbose);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mPlexCpp_run_mPlex_Cpp", (DL_FUNC) &_mPlexCpp_run_mPlex_Cpp, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_mPlexCpp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
